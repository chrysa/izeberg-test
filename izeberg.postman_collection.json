{
	"info": {
		"_postman_id": "29457b34-481c-46f8-ad7c-7e83679dcb0c",
		"name": "izeberg",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "add user to type",
			"item": [
				{
					"name": "invalid type",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const host = pm.variables.get(\"HOST\");\r",
									"const port = pm.variables.get(\"PORT\");\r",
									"let authToken = '';\r",
									"\r",
									"const postRequest = {\r",
									"  url: `${host}:${port}/api/login/`,\r",
									"  method: 'POST',\r",
									"  body: {\r",
									"    mode: 'raw',\r",
									"    raw: JSON.stringify({\"username\": \"admin\",\"password\": \"admin\"})\r",
									"  },\r",
									"  header: {\r",
									"    'Content-Type': 'application/json'\r",
									"  }\r",
									"};\r",
									"pm.sendRequest(postRequest, (error, response) => {\r",
									"  if (error) {\r",
									"    console.log(`Error: ${error}`);\r",
									"    return;\r",
									"  }\r",
									"  const responseData = response.json();\r",
									"  authToken = responseData.token;\r",
									"  pm.environment.set(\"AUTH_TOKEN\", authToken);\r",
									"  console.log(`Successfully authenticated! Token: ${authToken}`);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{AUTH_TOKEN}}",
								"type": "default"
							}
						],
						"url": {
							"raw": "{{HOST}}:{{PORT}}/api/group/invalid/add/",
							"host": [
								"{{HOST}}"
							],
							"port": "{{PORT}}",
							"path": [
								"api",
								"group",
								"invalid",
								"add",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "valid type",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const host = pm.variables.get(\"HOST\");\r",
									"const port = pm.variables.get(\"PORT\");\r",
									"let authToken = \"\";\r",
									"\r",
									"pm.sendRequest({\r",
									"  url: `${host}:${port}/api/login/`,\r",
									"  method: 'POST',\r",
									"  body: {\r",
									"    mode: 'raw',\r",
									"    raw: JSON.stringify({\"username\": \"admin\",\"password\": \"admin\"})\r",
									"  },\r",
									"  header: {\r",
									"    'Content-Type': 'application/json'\r",
									"  }\r",
									"}, (error, response) => {\r",
									"  if (error) {\r",
									"    console.log(`Error: ${error}`);\r",
									"    return;\r",
									"  }\r",
									"  const responseData = response.json();\r",
									"  authToken = responseData.token;\r",
									"  pm.environment.set(\"AUTH_TOKEN\", authToken);\r",
									"  console.log(`Successfully authenticated! Token: ${authToken}`);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{AUTH_TOKEN}}",
								"type": "default"
							}
						],
						"url": {
							"raw": "{{HOST}}:{{PORT}}/api/group/normal/add/",
							"host": [
								"{{HOST}}"
							],
							"port": "{{PORT}}",
							"path": [
								"api",
								"group",
								"normal",
								"add",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "add second valid type",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const host = pm.variables.get(\"HOST\");\r",
									"const port = pm.variables.get(\"PORT\");\r",
									"\r",
									"pm.sendRequest({\r",
									"  url: `${host}:${port}/api/login/`,\r",
									"  method: 'POST',\r",
									"  body: {\r",
									"    mode: 'raw',\r",
									"    raw: JSON.stringify({\"username\": \"admin\",\"password\": \"admin\"})\r",
									"  },\r",
									"  header: {\r",
									"    'Content-Type': 'application/json'\r",
									"  }\r",
									"}, (error, response) => {\r",
									"  if (error) {\r",
									"    console.log(`Error: ${error}`);\r",
									"    return;\r",
									"  }\r",
									"  const responseData = response.json();\r",
									"  const authToken = responseData.token;\r",
									"  pm.environment.set(\"AUTH_TOKEN\", authToken);\r",
									"  console.log(`Successfully authenticated! Token: ${authToken}`);\r",
									"    pm.sendRequest({\r",
									"    url: `${host}:${port}/api/group/normal/add/`,\r",
									"    method: 'POST',\r",
									"    body: {},\r",
									"    header: {\r",
									"        'Authorization': `Token ${authToken}`,\r",
									"        'Content-Type': 'application/json'\r",
									"    }\r",
									"    }, (error, response) => {\r",
									"    if (error) {\r",
									"        console.log(`Error: ${error}`);\r",
									"        return;\r",
									"    }\r",
									"    });\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{AUTH_TOKEN}}",
								"type": "default"
							}
						],
						"url": {
							"raw": "{{HOST}}:{{PORT}}/api/group/bug/add/",
							"host": [
								"{{HOST}}"
							],
							"port": "{{PORT}}",
							"path": [
								"api",
								"group",
								"bug",
								"add",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "already have this type",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const host = pm.variables.get(\"HOST\");\r",
									"const port = pm.variables.get(\"PORT\");\r",
									"\r",
									"pm.sendRequest({\r",
									"  url: `${host}:${port}/api/login/`,\r",
									"  method: 'POST',\r",
									"  body: {\r",
									"    mode: 'raw',\r",
									"    raw: JSON.stringify({\"username\": \"admin\",\"password\": \"admin\"})\r",
									"  },\r",
									"  header: {\r",
									"    'Content-Type': 'application/json'\r",
									"  }\r",
									"}, (error, response) => {\r",
									"  if (error) {\r",
									"    console.log(`Error: ${error}`);\r",
									"    return;\r",
									"  }\r",
									"  const responseData = response.json();\r",
									"  const authToken = responseData.token;\r",
									"  pm.environment.set(\"AUTH_TOKEN\", authToken);\r",
									"  console.log(`Successfully authenticated! Token: ${authToken}`);\r",
									"\r",
									"    pm.sendRequest({\r",
									"    url: `${host}:${port}/api/group/normal/add/`,\r",
									"    method: 'POST',\r",
									"    body: {},\r",
									"    header: {\r",
									"        'Authorization': `Token ${authToken}`,\r",
									"        'Content-Type': 'application/json'\r",
									"    }\r",
									"    }, (error, response) => {\r",
									"    if (error) {\r",
									"        console.log(`Error: ${error}`);\r",
									"        return;\r",
									"    }\r",
									"    });\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{AUTH_TOKEN}}",
								"type": "default"
							}
						],
						"url": {
							"raw": "{{HOST}}:{{PORT}}/api/group/normal/add/",
							"host": [
								"{{HOST}}"
							],
							"port": "{{PORT}}",
							"path": [
								"api",
								"group",
								"normal",
								"add",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "unlogged",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{HOST}}:{{PORT}}/api/user/me/",
							"host": [
								"{{HOST}}"
							],
							"port": "{{PORT}}",
							"path": [
								"api",
								"user",
								"me",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "delete user to type",
			"item": [
				{
					"name": "invalid type",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const host = pm.variables.get(\"HOST\");\r",
									"const port = pm.variables.get(\"PORT\");\r",
									"\r",
									"const postRequest = {\r",
									"  url: `${host}:${port}/api/login/`,\r",
									"  method: 'POST',\r",
									"  body: {\r",
									"    mode: 'raw',\r",
									"    raw: JSON.stringify({\"username\": \"admin\",\"password\": \"admin\"})\r",
									"  },\r",
									"  header: {\r",
									"    'Content-Type': 'application/json'\r",
									"  }\r",
									"};\r",
									"pm.sendRequest(postRequest, (error, response) => {\r",
									"  if (error) {\r",
									"    console.log(`Error: ${error}`);\r",
									"    return;\r",
									"  }\r",
									"  const responseData = response.json();\r",
									"  const authToken = responseData.token;\r",
									"  pm.environment.set(\"AUTH_TOKEN\", authToken);\r",
									"  console.log(`Successfully authenticated! Token: ${authToken}`);\r",
									"\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{AUTH_TOKEN}}",
								"type": "default"
							}
						],
						"url": {
							"raw": "{{HOST}}:{{PORT}}/api/group/invalid/remove/",
							"host": [
								"{{HOST}}"
							],
							"port": "{{PORT}}",
							"path": [
								"api",
								"group",
								"invalid",
								"remove",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "valid type",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const host = pm.variables.get(\"HOST\");\r",
									"const port = pm.variables.get(\"PORT\");\r",
									"\r",
									"pm.sendRequest({\r",
									"  url: `${host}:${port}/api/login/`,\r",
									"  method: 'POST',\r",
									"  body: {\r",
									"    mode: 'raw',\r",
									"    raw: JSON.stringify({\"username\": \"admin\",\"password\": \"admin\"})\r",
									"  },\r",
									"  header: {\r",
									"    'Content-Type': 'application/json'\r",
									"  }\r",
									"}, (error, response) => {\r",
									"  if (error) {\r",
									"    console.log(`Error: ${error}`);\r",
									"    return;\r",
									"  }\r",
									"  const responseData = response.json();\r",
									"  const authToken = responseData.token;\r",
									"  pm.environment.set(\"AUTH_TOKEN\", authToken);\r",
									"  console.log(`Successfully authenticated! Token: ${authToken}`);\r",
									"\r",
									"    pm.sendRequest({\r",
									"    url: `${host}:${port}/api/group/normal/add/`,\r",
									"    method: 'POST',\r",
									"    body: {},\r",
									"    header: {\r",
									"        'Authorization': `Token ${authToken}`,\r",
									"        'Content-Type': 'application/json'\r",
									"    }\r",
									"    }, (error, response) => {\r",
									"    if (error) {\r",
									"        console.log(`Error: ${error}`);\r",
									"        return;\r",
									"    }\r",
									"    });\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{AUTH_TOKEN}}",
								"type": "default"
							}
						],
						"url": {
							"raw": "{{HOST}}:{{PORT}}/api/group/normal/remove/",
							"host": [
								"{{HOST}}"
							],
							"port": "{{PORT}}",
							"path": [
								"api",
								"group",
								"normal",
								"remove",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "valid type but not added",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const host = pm.variables.get(\"HOST\");\r",
									"const port = pm.variables.get(\"PORT\");\r",
									"\r",
									"pm.sendRequest({\r",
									"  url: `${host}:${port}/api/login/`,\r",
									"  method: 'POST',\r",
									"  body: {\r",
									"    mode: 'raw',\r",
									"    raw: JSON.stringify({\"username\": \"admin\",\"password\": \"admin\"})\r",
									"  },\r",
									"  header: {\r",
									"    'Content-Type': 'application/json'\r",
									"  }\r",
									"}, (error, response) => {\r",
									"  if (error) {\r",
									"    console.log(`Error: ${error}`);\r",
									"    return;\r",
									"  }\r",
									"  const responseData = response.json();\r",
									"  const authToken = responseData.token;\r",
									"  pm.environment.set(\"AUTH_TOKEN\", authToken);\r",
									"  console.log(`Successfully authenticated! Token: ${authToken}`);\r",
									"\r",
									"    pm.sendRequest({\r",
									"    url: `${host}:${port}/api/group/normal/add/`,\r",
									"    method: 'POST',\r",
									"    body: {},\r",
									"    header: {\r",
									"        'Authorization': `Token ${authToken}`,\r",
									"        'Content-Type': 'application/json'\r",
									"    }\r",
									"    }, (error, response) => {\r",
									"    if (error) {\r",
									"        console.log(`Error: ${error}`);\r",
									"        return;\r",
									"    }\r",
									"    });\r",
									"\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{AUTH_TOKEN}}",
								"type": "default"
							}
						],
						"url": {
							"raw": "{{HOST}}:{{PORT}}/api/group/fighting/remove/",
							"host": [
								"{{HOST}}"
							],
							"port": "{{PORT}}",
							"path": [
								"api",
								"group",
								"fighting",
								"remove",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "remove second valid type",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const host = pm.variables.get(\"HOST\");\r",
									"const port = pm.variables.get(\"PORT\");\r",
									"pm.sendRequest({\r",
									"  url: `${host}:${port}/api/login/`,\r",
									"  method: 'POST',\r",
									"  body: {\r",
									"    mode: 'raw',\r",
									"    raw: JSON.stringify({\"username\": \"admin\",\"password\": \"admin\"})\r",
									"  },\r",
									"  header: {\r",
									"    'Content-Type': 'application/json'\r",
									"  }\r",
									"}, (error, response) => {\r",
									"  if (error) {\r",
									"    console.log(`Error: ${error}`);\r",
									"    return;\r",
									"  }\r",
									"  const responseData = response.json();\r",
									"  const authToken = responseData.token;\r",
									"  pm.environment.set(\"AUTH_TOKEN\", authToken);\r",
									"  console.log(`Successfully authenticated! Token: ${authToken}`);\r",
									"\r",
									"    pm.sendRequest({\r",
									"    url: `${host}:${port}/api/group/bug/add/`,\r",
									"    method: 'POST',\r",
									"    body: {},\r",
									"    header: {\r",
									"        'Authorization': `Token ${authToken}`,\r",
									"        'Content-Type': 'application/json'\r",
									"    }\r",
									"    }, (error, response) => {\r",
									"    if (error) {\r",
									"        console.log(`Error: ${error}`);\r",
									"        return;\r",
									"    }\r",
									"    });\r",
									"\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{AUTH_TOKEN}}",
								"type": "default"
							}
						],
						"url": {
							"raw": "{{HOST}}:{{PORT}}/api/group/bug/remove/",
							"host": [
								"{{HOST}}"
							],
							"port": "{{PORT}}",
							"path": [
								"api",
								"group",
								"bug",
								"remove",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "unlogged",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{HOST}}:{{PORT}}/api/group/normal/remove/",
							"host": [
								"{{HOST}}"
							],
							"port": "{{PORT}}",
							"path": [
								"api",
								"group",
								"normal",
								"remove",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "profile",
			"item": [
				{
					"name": "unlogged",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{HOST}}:{{PORT}}/api/user/me/",
							"host": [
								"{{HOST}}"
							],
							"port": "{{PORT}}",
							"path": [
								"api",
								"user",
								"me",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "logged",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const host = pm.variables.get(\"HOST\");\r",
									"const port = pm.variables.get(\"PORT\");\r",
									"\r",
									"pm.sendRequest({\r",
									"  url: `${host}:${port}/api/login/`,\r",
									"  method: 'POST',\r",
									"  body: {\r",
									"    mode: 'raw',\r",
									"    raw: JSON.stringify({\"username\": \"admin\",\"password\": \"admin\"})\r",
									"  },\r",
									"  header: {\r",
									"    'Content-Type': 'application/json'\r",
									"  }\r",
									"}, (error, response) => {\r",
									"  if (error) {\r",
									"    console.log(`Error: ${error}`);\r",
									"    return;\r",
									"  }\r",
									"  const responseData = response.json();\r",
									"  const authToken = responseData.token;\r",
									"  console.log(`Successfully authenticated! Token: ${authToken}`);\r",
									"  pm.environment.set(\"AUTH_TOKEN\", authToken);\r",
									"  pm.sendRequest({\r",
									"      url: `${host}:${port}/api/group/normal/add/`,\r",
									"      method: 'POST',\r",
									"      body: {},\r",
									"      header: {\r",
									"          'Authorization': `Token ${authToken}`,\r",
									"          'Content-Type': 'application/json'\r",
									"          }\r",
									"    }, (error, response) => {\r",
									"        if (error) {\r",
									"            console.log(`Error: ${error}`);\r",
									"            return;\r",
									"        }\r",
									"    });\r",
									"  pm.sendRequest({\r",
									"      url: `${host}:${port}/api/group/bug/add/`,\r",
									"      method: 'POST',\r",
									"      body: {},\r",
									"      header: {\r",
									"          'Authorization': `Token ${authToken}`,\r",
									"          'Content-Type': 'application/json'\r",
									"        }\r",
									"    }, (error, response) => {\r",
									"        if (error) {\r",
									"            console.log(`Error: ${error}`);\r",
									"            return;\r",
									"        }\r",
									"    });\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{AUTH_TOKEN}}",
								"type": "default"
							}
						],
						"url": {
							"raw": "{{HOST}}:{{PORT}}/api/user/me/",
							"host": [
								"{{HOST}}"
							],
							"port": "{{PORT}}",
							"path": [
								"api",
								"user",
								"me",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "pokemon list",
			"item": [
				{
					"name": "logged",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const host = pm.variables.get(\"HOST\");\r",
									"const port = pm.variables.get(\"PORT\");\r",
									"let authToken = \"\";\r",
									"\r",
									"pm.sendRequest({\r",
									"  url: `${host}:${port}/api/login/`,\r",
									"  method: 'POST',\r",
									"  body: {\r",
									"    mode: 'raw',\r",
									"    raw: JSON.stringify({\"username\": \"admin\",\"password\": \"admin\"})\r",
									"  },\r",
									"  header: {\r",
									"    'Content-Type': 'application/json'\r",
									"  }\r",
									"}, (error, response) => {\r",
									"  if (error) {\r",
									"    console.log(`Error: ${error}`);\r",
									"    return;\r",
									"  }\r",
									"  const responseData = response.json();\r",
									"  const authToken = responseData.token;\r",
									"  pm.environment.set(\"AUTH_TOKEN\", authToken);\r",
									"  console.log(`Successfully authenticated! Token: ${authToken}`);\r",
									"  pm.sendRequest({\r",
									"   url: `${host}:${port}/api/group/normal/add/`,\r",
									"   method: 'POST',\r",
									"   body: {},\r",
									"   header: {\r",
									"       'Authorization': `Token ${authToken}`,\r",
									"       'Content-Type': 'application/json'\r",
									"   }\r",
									"  }, (error, response) => {\r",
									"  if (error) {\r",
									"       console.log(`Error: ${error}`);\r",
									"   }\r",
									"   });\r",
									"\r",
									"    pm.sendRequest({\r",
									"    url: `${host}:${port}/api/group/bug/add/`,\r",
									"    method: 'POST',\r",
									"    body: {},\r",
									"    header: {\r",
									"        'Authorization': 'Token ' + `${authToken}`,\r",
									"        'Content-Type': 'application/json'\r",
									"    }\r",
									"    }, (error, response) => {\r",
									"    if (error) {\r",
									"        console.log(`Error: ${error}`);\r",
									"    }\r",
									"    });\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{AUTH_TOKEN}}",
								"type": "default"
							}
						],
						"url": {
							"raw": "{{HOST}}:{{PORT}}/api/pokemon/",
							"host": [
								"{{HOST}}"
							],
							"port": "{{PORT}}",
							"path": [
								"api",
								"pokemon",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "unlogged",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{HOST}}:{{PORT}}/api/pokemon/",
							"host": [
								"{{HOST}}"
							],
							"port": "{{PORT}}",
							"path": [
								"api",
								"pokemon",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "select pokemon",
			"item": [
				{
					"name": "logged by num",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const host = pm.variables.get(\"HOST\");\r",
									"const port = pm.variables.get(\"PORT\");\r",
									"\r",
									"pm.sendRequest({\r",
									"  url: `${host}:${port}/api/login/`,\r",
									"  method: 'POST',\r",
									"  body: {\r",
									"    mode: 'raw',\r",
									"    raw: JSON.stringify({\"username\": \"admin\",\"password\": \"admin\"})\r",
									"  },\r",
									"  header: {\r",
									"    'Content-Type': 'application/json'\r",
									"  }\r",
									"}, (error, response) => {\r",
									"  if (error) {\r",
									"    console.log(`Error: ${error}`);\r",
									"    return;\r",
									"  }\r",
									"  const responseData = response.json();\r",
									"  const authToken = responseData.token;\r",
									"  pm.environment.set(\"AUTH_TOKEN\", authToken);\r",
									"  console.log(`Successfully authenticated! Token: ${authToken}`);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{AUTH_TOKEN}}",
								"type": "default"
							}
						],
						"url": {
							"raw": "{{HOST}}:{{PORT}}/api/pokemon/1/",
							"host": [
								"{{HOST}}"
							],
							"port": "{{PORT}}",
							"path": [
								"api",
								"pokemon",
								"1",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "logged by name",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const host = pm.variables.get(\"HOST\");\r",
									"const port = pm.variables.get(\"PORT\");\r",
									"let authToken = \"\";\r",
									"\r",
									"pm.sendRequest({\r",
									"  url: `${host}:${port}/api/login/`,\r",
									"  method: 'POST',\r",
									"  body: {\r",
									"    mode: 'raw',\r",
									"    raw: JSON.stringify({\"username\": \"admin\",\"password\": \"admin\"})\r",
									"  },\r",
									"  header: {\r",
									"    'Content-Type': 'application/json'\r",
									"  }\r",
									"}, (error, response) => {\r",
									"  if (error) {\r",
									"    console.log(`Error: ${error}`);\r",
									"    return;\r",
									"  }\r",
									"  const responseData = response.json();\r",
									"  const authToken = responseData.token;\r",
									"  pm.environment.set(\"AUTH_TOKEN\", authToken);\r",
									"  console.log(`Successfully authenticated! Token: ${authToken}`);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{AUTH_TOKEN}}",
								"type": "default"
							}
						],
						"url": {
							"raw": "{{HOST}}:{{PORT}}/api/pokemon/bulbasaur/",
							"host": [
								"{{HOST}}"
							],
							"port": "{{PORT}}",
							"path": [
								"api",
								"pokemon",
								"bulbasaur",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "unlogged by num",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{HOST}}:{{PORT}}/api/pokemon/1/",
							"host": [
								"{{HOST}}"
							],
							"port": "{{PORT}}",
							"path": [
								"api",
								"pokemon",
								"1",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "unlogged by name",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{HOST}}:{{PORT}}/api/pokemon/bulbasaur/",
							"host": [
								"{{HOST}}"
							],
							"port": "{{PORT}}",
							"path": [
								"api",
								"pokemon",
								"bulbasaur",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "get token",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"admin\",\r\n    \"password\": \"admin\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{HOST}}:{{PORT}}/api/login/",
					"host": [
						"{{HOST}}"
					],
					"port": "{{PORT}}",
					"path": [
						"api",
						"login",
						""
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "HOST",
			"value": "0.0.0.0",
			"type": "default"
		},
		{
			"key": "PORT",
			"value": "8080",
			"type": "default"
		}
	]
}